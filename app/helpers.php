<?php

use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Auth;

/**
 * Global helpers file with misc functions.
 */
if (!function_exists('app_name')) {
    /**
     * Helper to grab the application name.
     *
     * @return mixed
     */
    function app_name()
    {
        return config('app.name');
    }
}

if (!function_exists('access')) {
    /**
     * Access (lol) the Access:: facade as a simple function.
     */
    function access()
    {
        return app('access');
    }
}

if (!function_exists('history')) {
    /**
     * Access the history facade anywhere.
     */
    function history()
    {
        return app('history');
    }
}

if (!function_exists('gravatar')) {
    /**
     * Access the gravatar helper.
     */
    function gravatar()
    {
        return app('gravatar');
    }
}

if (!function_exists('includeRouteFiles')) {

    /**
     * Loops through a folder and requires all PHP files
     * Searches sub-directories as well.
     *
     * @param $folder
     */
    function includeRouteFiles($folder)
    {
        try {
            $rdi = new recursiveDirectoryIterator($folder);
            $it = new recursiveIteratorIterator($rdi);

            while ($it->valid()) {
                if (!$it->isDot() && $it->isFile() && $it->isReadable() && $it->current()->getExtension() === 'php') {
                    require $it->key();
                }

                $it->next();
            }
        } catch (Exception $e) {
            echo $e->getMessage();
        }
    }
}

if (!function_exists('getRtlCss')) {

    /**
     * The path being passed is generated by Laravel Mix manifest file
     * The webpack plugin takes the css filenames and appends rtl before the .css extension
     * So we take the original and place that in and send back the path.
     *
     * @param $path
     *
     * @return string
     */
    function getRtlCss($path)
    {
        $path = explode('/', $path);
        $filename = end($path);
        array_pop($path);
        $filename = rtrim($filename, '.css');

        return implode('/', $path) . '/' . $filename . '.rtl.css';
    }
}

if (!function_exists('homeRoute')) {

    /**
     * Return the route to the "home" page depending on authentication/authorization status.
     *
     * @return string
     */
    function homeRoute()
    {
        if (Auth::check()) {
            return 'admin.timeentry';
        }

        return 'frontend.standings';
    }
}

/**************/
if (!function_exists('getCached')) {
    function getCached($key)
    {
        $race_start = getStartEventDateTime();
        $current_time = getCurrentDateTime();

        if ($current_time >= $race_start && config('app.use_query_caching')) {
            if (config('app.debug'))
                \Log::debug('checking cache: ' . $key);
            if (Cache::has($key)) {
                if (config('app.debug'))
                    \Log::debug('cached: ' . $key);
                return Cache::get($key);
            }
        }
        return false;
    }
}

if (!function_exists('getStartEventDateTime')) {
    function getStartEventDateTime()
    {
        $race_start = new DateTime();
        $race_start->setDate(config('app.race_year'), config('app.race_month'), config('app.race_day'));
        $race_start->setTime(config('app.race_hour'), config('app.race_min'), 0);
        return $race_start;
    }
}

if (!function_exists('getEndEventDateTime')) {
    function getEndEventDateTime()
    {
        $race_end = new DateTime();
        $race_end->setDate(config('app.race_year'), config('app.race_month'), config('app.race_day'));
        $race_end->setTime(config('app.race_hour'), config('app.race_min'), 0);
        $race_end->modify('+1 day');
        return $race_end;
    }
}

if (!function_exists('getCurrentDateTime')) {
    function getCurrentDateTime()
    {
        $dt = new DateTime();

        if (config('app.simulate_actual_race_datetime')) {
            $dt->setDate(config('app.race_year'), config('app.race_month'), config('app.race_day'));
            $thehour = intval($dt->format('G'));
            $theminute = intval($dt->format('i'));
            if ($thehour >= 0 && $thehour <= 5 && $theminute <= 14)
                $dt->modify('+1 day');
        }

        return $dt;
    }
}

if (!function_exists('addQuotes')) {
    function addQuotes($str)
    {
        return "'$str'";
    }
}

if (!function_exists('generateRandomString')) {
    function generateRandomString($length = 4)
    {
        $c = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
        $clen = strlen($c);
        $s = '';
        for ($i = 0; $i < $length; $i++) {
            $s .= $c[rand(0, $clen - 1)];
        }
        return $s;
    }
}

if (!function_exists('emptyDatatable')) {
    function emptyDatatable()
    {
        return '{"draw":0,"recordsTotal":0,"recordsFiltered":0,"data":[],"input":{}}';
    }
}
